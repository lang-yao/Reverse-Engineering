1、第一课
，，，，不知道什么壳？？？

ESP定律法
然后单步跟踪
找到大的跳转
右键跟随后下断点，重新载入，运行直达OEP
脱壳后vc6程序

自定义添加工具右键发送到：
资源管理器，地址栏:shell:sendto
在文件夹下创建快捷方式

2、第二课
FSG2.0脱壳

二次内存镜像法
1、rdata下断，运行
2、code段下断,运行

单步多走了，又f4回去= =
工具:detect it easy,	查编译器，vc++
IR中只有VB程序可能修复时，列表中只有一个函数
手动查找RVA
命令：d xxxx（跟踪call 后面的函数）
剪切无效指针，修复完毕

3、第三课
北斗的壳

ESP定律法+code下断，直接到OEP
两次内存法，第二次跑到OEP下面了，F4上去
CODE段

4、第四课
垃圾语句,nop掉
1、二次内存镜像法脱壳
2、bp GetProcAdress


5、第五课
UPX壳

1、二次内存镜像法
nop不能打断
被偷取一字节
VB被偷不好找
2、bp VirtualProtect
内存法很好
ESP定律法会跳过很多东西

6、第六课
telock壳

1、二次内存法
等级3跟踪成功修复
清空OD的UDD文件夹
CRC校验
找地址跳过退出
将条件跳转改为无条件跳转

ctrl+b 搜索二进制字符
跳过magic jump ，指针全部有效
2、最后一次异常法
不勾选内存访问异常
插件：异常计数器
等级3修复

7.第七课
oRien 壳（俄罗斯的）

1、ESP定律+代码段下断点
向上跳向OEP
修复：
1、删除无效指针可以运行，剪切不能运行
Q:区别是什么 ？
2、手动查找修复：
dd xxx
在数据窗口查看指针
下硬件断点，手动查找函数
3、跳过加密函数
命令：BP GetProcAddress [ESP]<004A6000&[ESP+0C]<004A6000
运行
堆栈窗口：
0012FF5C   004A2ADD  /CALL 到 GetProcAddress 来自 UnPackMe.004A2AD8
0012FF60   7C800000  |hModule = 7C800000 (kernel32)
0012FF64   00455738  \ProcNameOrOrdinal = "DeleteCriticalSection"
0012FF68   00455000  UnPackMe.00455000
0012FF6C   004520A0  UnPackMe.004520A0

00455000-》55000是RVA
查找命令序列
jmp     eax
int	0EB
sti

lordPE和IR手动修改IAT

lordPE修改OEP，目录选项中修改输入表RVA（偏移地址），重建PE
Q:脱壳脚本怎么写？

8、第八课
molebox脱壳

清空UDD文件夹，所有程序或模块相关的信息保存至单独的文件中，并在模块重新加载时继续使用。这些信息包括了标签、注释、断点、监视、分析数据、条件等等
1、ESP定律法
修改maicg jump,过加密指针
在IR中查看无效指针的RVA
在数据窗口查找00451700，下硬件执行断点，运行n次，看1700函数变化
找到最后一次跳过加密的jump,修改该jmp
之后查找命令序列找OEP入口 
脱壳后，指针有效

2、下断点
bp VirtualProtect
天草教程运行3次，不一定准确
HR esp；ESP定律法


9、第九课（程序调试报错，没有试验）
CRYPToCRACk's PE Protector壳


1、二次内存镜像法
直达 OEP
ID加密：
iR等级3修复

2、
资源段下断点
远call跟进
指针被加密，
004683348B7C24 04 MOV EDI,DWORD PTR SS:[ESP+4] //这里将加密指针放入EDI寄存器
00468338893C8AMOV DWORD PTR DS:[EDX+ECX*4],EDI//这里观察寄存器窗口，EAX的值是还没加密的函数，这时把EDI寄存器改成EAX，就可以达到解密效果

跳过了加密步骤

10、第十课
PESpin 1.3壳
OEP被偷

ESP定律法，在假OEP之前，先单步
1、先单步
2、ESP定律法，shift+f9运行
3、单步
4、找C++的oep
push ebp开始，
注意堆栈窗口的代码

11、第11课
去VB自校验

ESP定律
脱壳后，去自校验
方法一：
命令：bpx papa
vbaNew2,调用退出函数，设置每次调用到vbaNew2的断点
VB的自校验可以对函数操作

第二个程序
bpx papa
退出函数，跳过

方法二：
BP rtcFileLen
方法三：
ctrl+b 搜
816C24
单步跟


12、第十二课
FSG2.0

脱壳
专用脱壳法：
运行到xchg eax,esp
堆栈窗口第四行，在反汇编窗口跟随，删除模块分析，设置硬件访问断点
重载程序，运行，删除模块分析
LordPE dump程序
FSG2.0 有IAT处理
修正IAT

无法运行，存在自校验

bp FindFirstFileA
运行，不取消断点
1、单步改
2、搜索全部命令：cmp eax, 2e49
3、bpx papa，对exitProcess下访问断点
改两个cmp
第三个需要bp FindFirstFileA
